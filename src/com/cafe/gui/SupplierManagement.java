package com.cafe.gui;

import com.cafe.model.Mysql;
import com.cafe.model.SupplierBean;
import com.cafe.model.User;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.util.HashMap;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;

public class SupplierManagement extends javax.swing.JPanel {

    HashMap<String, Integer> supplierCategoryMap = new HashMap<>();
    private Dashboard dashboard;
    private String mobile;

    private SupplierBean supplierBean = new SupplierBean();

    public Dashboard getDashboard() {
        return dashboard;
    }

    public void setDashboard(Dashboard dashboard) {
        this.dashboard = dashboard;
    }

    public SupplierManagement() {
        initComponents();
        search();
        loadCategory();
        loadSupplier();
        setStyle();
    }

    private void search() {

        try {
            Vector vector = new Vector();
            ResultSet resultSet = Mysql.execute("SELECT * FROM `supplier_category` ");

            while (resultSet.next()) {

                String category = resultSet.getString("supplier_category.name");
                int categoryid = resultSet.getInt("supplier_category.id");

                vector.add(category);
                supplierCategoryMap.put(category, categoryid);

            }

            DefaultComboBoxModel comboBoxModel = (DefaultComboBoxModel) jComboBox3.getModel();

            comboBoxModel.addAll(vector);

        } catch (Exception e) {
            e.printStackTrace();
            Splash.logger.log(Level.SEVERE, null, e);
        }

    }

    private void loadCategory() {

        try {
            Vector vector = new Vector();
            ResultSet resultSet = Mysql.execute("SELECT * FROM `supplier_category` ");

            while (resultSet.next()) {

                String category = resultSet.getString("supplier_category.name");
                int categoryid = resultSet.getInt("supplier_category.id");

                vector.add(category);
                supplierCategoryMap.put(category, categoryid);
            }

            DefaultComboBoxModel comboBoxModel = (DefaultComboBoxModel) jComboBox2.getModel();

            comboBoxModel.addAll(vector);

        } catch (Exception e) {
            e.printStackTrace();
            Splash.logger.log(Level.SEVERE, null, e);
        }

    }

    private void loadSupplier() {

        try {
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            model.setRowCount(0);

            String key = jTextField1.getText();
            String category = "";
            if (jComboBox2.getSelectedIndex() != 0) {
                category = String.valueOf(jComboBox2.getSelectedItem());

            } else {
                category = "";

            }

            ResultSet resultSet = Mysql.execute("SELECT * FROM `supplier` "
                    + "INNER JOIN `supplier_category` ON `supplier`.`supplier_category_id` = `supplier_category`.`id` "
                    + "WHERE (`mobile` LIKE '" + key + "%' OR `supplier`.`name` LIKE '%" + key + "%') "
                    + "AND `supplier_category`.`name` LIKE  '" + category + "%'");

            while (resultSet.next()) {

                Vector vector = new Vector<>();
                vector.add(resultSet.getString("name"));
                vector.add(resultSet.getString("mobile"));
                vector.add(resultSet.getString("email"));
                vector.add(resultSet.getString("supplier_category.name"));

                model.addRow(vector);

            }
            jLabel2.setText("SUPPLIER LIST (" + model.getRowCount() + ")");
        } catch (Exception e) {
            e.printStackTrace();
            Splash.logger.log(Level.SEVERE, null, e);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        jPanel19 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jPanel20 = new javax.swing.JPanel();
        jPanel15 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jPanel12 = new javax.swing.JPanel();
        jComboBox3 = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jPanel7 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jPanel9 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jTextField1 = new javax.swing.JTextField();
        jPanel16 = new javax.swing.JPanel();
        jButton4 = new javax.swing.JButton();

        jMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/cafe/img/clear.png"))); // NOI18N
        jMenuItem1.setText("Clear Selection");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMenuItem1);

        setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 20, 10, 20));
        setLayout(new java.awt.BorderLayout());

        jPanel1.setMinimumSize(new java.awt.Dimension(194, 54));
        jPanel1.setPreferredSize(new java.awt.Dimension(500, 460));
        jPanel1.setLayout(new java.awt.BorderLayout(0, 15));

        jPanel5.setLayout(new java.awt.BorderLayout(20, 15));

        jPanel10.setLayout(new java.awt.BorderLayout());

        jPanel14.setLayout(new java.awt.BorderLayout(5, 10));

        jPanel19.setLayout(new java.awt.BorderLayout(5, 10));

        jScrollPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jScrollPane1MouseReleased(evt);
            }
        });

        jTable1.setAutoCreateRowSorter(true);
        jTable1.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NAME", "MOBILE", "EMAIL", "CATEGORY"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setFocusable(false);
        jTable1.setSelectionBackground(new java.awt.Color(77, 120, 204));
        jTable1.setSelectionForeground(new java.awt.Color(255, 255, 255));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTable1MouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
            jTable1.getColumnModel().getColumn(3).setResizable(false);
        }

        jPanel19.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel4.setPreferredSize(new java.awt.Dimension(100, 20));
        jPanel4.setLayout(new java.awt.BorderLayout());

        jLabel2.setFont(new java.awt.Font("Segoe UI Semibold", 0, 16)); // NOI18N
        jLabel2.setText("SUPPLIER LIST ()");
        jLabel2.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jPanel4.add(jLabel2, java.awt.BorderLayout.LINE_START);

        jPanel19.add(jPanel4, java.awt.BorderLayout.NORTH);

        jPanel14.add(jPanel19, java.awt.BorderLayout.CENTER);

        jPanel10.add(jPanel14, java.awt.BorderLayout.CENTER);

        jPanel5.add(jPanel10, java.awt.BorderLayout.CENTER);

        jPanel11.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createTitledBorder(null, "MANAGE SUPPLIER", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Semibold", 0, 14)), javax.swing.BorderFactory.createEmptyBorder(10, 10, 15, 10))); // NOI18N
        jPanel11.setPreferredSize(new java.awt.Dimension(300, 120));
        jPanel11.setLayout(new java.awt.BorderLayout(20, 0));

        jPanel13.setPreferredSize(new java.awt.Dimension(600, 100));
        jPanel13.setLayout(new java.awt.BorderLayout(20, 20));

        jPanel20.setPreferredSize(new java.awt.Dimension(350, 100));
        jPanel20.setLayout(new java.awt.BorderLayout(10, 0));

        jPanel15.setLayout(new java.awt.BorderLayout(10, 10));

        jButton1.setBackground(new java.awt.Color(77, 120, 204));
        jButton1.setFont(new java.awt.Font("Segoe UI Semibold", 0, 16)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("ADD SUPPLIER");
        jButton1.setPreferredSize(new java.awt.Dimension(160, 40));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel15.add(jButton1, java.awt.BorderLayout.NORTH);

        jButton2.setBackground(new java.awt.Color(77, 120, 204));
        jButton2.setFont(new java.awt.Font("Segoe UI Semibold", 0, 16)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("UPDATE");
        jButton2.setToolTipText("Double click table to  update");
        jButton2.setEnabled(false);
        jButton2.setPreferredSize(new java.awt.Dimension(75, 40));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel15.add(jButton2, java.awt.BorderLayout.CENTER);

        jButton3.setBackground(new java.awt.Color(102, 102, 102));
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/cafe/img/refresh.png"))); // NOI18N
        jButton3.setBorderPainted(false);
        jButton3.setPreferredSize(new java.awt.Dimension(40, 40));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel15.add(jButton3, java.awt.BorderLayout.EAST);

        jPanel20.add(jPanel15, java.awt.BorderLayout.NORTH);

        jPanel13.add(jPanel20, java.awt.BorderLayout.CENTER);

        jPanel12.setPreferredSize(new java.awt.Dimension(300, 80));
        jPanel12.setLayout(new java.awt.BorderLayout(5, 5));

        jComboBox3.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Category" }));
        jComboBox3.setPreferredSize(new java.awt.Dimension(72, 40));
        jComboBox3.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox3ItemStateChanged(evt);
            }
        });
        jComboBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox3ActionPerformed(evt);
            }
        });
        jPanel12.add(jComboBox3, java.awt.BorderLayout.SOUTH);

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel5.setText("Supplier Category");
        jLabel5.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jPanel12.add(jLabel5, java.awt.BorderLayout.CENTER);

        jPanel13.add(jPanel12, java.awt.BorderLayout.NORTH);

        jPanel11.add(jPanel13, java.awt.BorderLayout.CENTER);

        jPanel8.setPreferredSize(new java.awt.Dimension(940, 240));
        jPanel8.setLayout(new java.awt.GridLayout(3, 1, 20, 0));

        jPanel6.setPreferredSize(new java.awt.Dimension(300, 100));
        jPanel6.setLayout(new java.awt.BorderLayout(5, 5));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel1.setText("Name");
        jLabel1.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel1.setPreferredSize(new java.awt.Dimension(72, 40));
        jPanel6.add(jLabel1, java.awt.BorderLayout.CENTER);

        jTextField2.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jTextField2.setPreferredSize(new java.awt.Dimension(72, 40));
        jPanel6.add(jTextField2, java.awt.BorderLayout.PAGE_END);

        jPanel8.add(jPanel6);

        jPanel7.setPreferredSize(new java.awt.Dimension(300, 100));
        jPanel7.setLayout(new java.awt.BorderLayout(0, 5));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel4.setText("Mobile");
        jLabel4.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel4.setPreferredSize(new java.awt.Dimension(72, 40));
        jPanel7.add(jLabel4, java.awt.BorderLayout.CENTER);

        jTextField4.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jTextField4.setPreferredSize(new java.awt.Dimension(72, 40));
        jTextField4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField4ActionPerformed(evt);
            }
        });
        jTextField4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField4KeyReleased(evt);
            }
        });
        jPanel7.add(jTextField4, java.awt.BorderLayout.PAGE_END);

        jPanel8.add(jPanel7);

        jPanel9.setPreferredSize(new java.awt.Dimension(300, 100));
        jPanel9.setLayout(new java.awt.BorderLayout(0, 5));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel3.setText("Email");
        jLabel3.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel3.setPreferredSize(new java.awt.Dimension(72, 40));
        jPanel9.add(jLabel3, java.awt.BorderLayout.CENTER);

        jTextField3.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jTextField3.setPreferredSize(new java.awt.Dimension(72, 40));
        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });
        jPanel9.add(jTextField3, java.awt.BorderLayout.PAGE_END);

        jPanel8.add(jPanel9);

        jPanel11.add(jPanel8, java.awt.BorderLayout.NORTH);

        jPanel5.add(jPanel11, java.awt.BorderLayout.WEST);

        jPanel1.add(jPanel5, java.awt.BorderLayout.CENTER);

        jPanel3.setPreferredSize(new java.awt.Dimension(850, 90));
        jPanel3.setLayout(new java.awt.BorderLayout());

        jPanel2.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createTitledBorder(null, "SEARCH SUPPLIER", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Semibold", 0, 14)), javax.swing.BorderFactory.createEmptyBorder(10, 10, 15, 10))); // NOI18N
        jPanel2.setPreferredSize(new java.awt.Dimension(600, 90));
        jPanel2.setLayout(new java.awt.BorderLayout(20, 0));

        jComboBox2.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Filter by Category" }));
        jComboBox2.setMinimumSize(new java.awt.Dimension(72, 40));
        jComboBox2.setPreferredSize(new java.awt.Dimension(200, 40));
        jComboBox2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox2ItemStateChanged(evt);
            }
        });
        jComboBox2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jComboBox2MouseClicked(evt);
            }
        });
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });
        jPanel2.add(jComboBox2, java.awt.BorderLayout.EAST);

        jTextField1.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jTextField1.setPreferredSize(new java.awt.Dimension(72, 40));
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField1KeyReleased(evt);
            }
        });
        jPanel2.add(jTextField1, java.awt.BorderLayout.CENTER);

        jPanel3.add(jPanel2, java.awt.BorderLayout.WEST);

        jPanel16.setPreferredSize(new java.awt.Dimension(250, 100));
        jPanel16.setLayout(new java.awt.BorderLayout());

        jButton4.setBackground(new java.awt.Color(102, 102, 102));
        jButton4.setFont(new java.awt.Font("Segoe UI Semibold", 0, 16)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("CHECK DUE PAYMENTS");
        jButton4.setBorderPainted(false);
        jButton4.setPreferredSize(new java.awt.Dimension(250, 40));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel16.add(jButton4, java.awt.BorderLayout.PAGE_START);

        jPanel3.add(jPanel16, java.awt.BorderLayout.LINE_END);

        jPanel1.add(jPanel3, java.awt.BorderLayout.PAGE_START);

        add(jPanel1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jTextField4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField4ActionPerformed

    private void jTextField4KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField4KeyReleased
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            String mobile = jTextField4.getText();

            try {
                ResultSet resultSet = Mysql.execute("SELECT * FROM  `supplier` WHERE `mobile` = '" + mobile + "'");
                if (resultSet.next()) {
                    String name = resultSet.getString("name");
                    String Email = resultSet.getString("email");
                    String category = resultSet.getString("supplier_category.name");

                    supplierBean.setName(name);
                    supplierBean.setMobile(mobile);
                    supplierBean.setEmail(Email);
                    supplierBean.setCategory(category);

                    jTextField2.setText(name);
                    jTextField4.setText(mobile);
                    jTextField3.setText(Email);
                    jComboBox3.setSelectedItem(String.valueOf(category));

                } else {
                    supplierBean.setName("None");
                    supplierBean.setMobile("None");
                    supplierBean.setEmail("None");
                    supplierBean.setCategory(0);

                    jTextField2.setText("");
                    jTextField4.setText("");
                    jTextField3.setText("");
                    jComboBox3.setSelectedItem(String.valueOf(0));

                }

            } catch (Exception e) {
                Splash.logger.log(Level.SEVERE, null, e);
            }

        }

    }//GEN-LAST:event_jTextField4KeyReleased

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed

    private void jComboBox3ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox3ItemStateChanged
        // TODO add your handling code here:

    }//GEN-LAST:event_jComboBox3ItemStateChanged

    private void jComboBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        addSupplier();


    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        checkDuePayments();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        updateSupplier();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2) {
            jTable1.setEnabled(false);
            jButton1.setEnabled(false);
            jButton2.setEnabled(true);
            int row = jTable1.getSelectedRow();

            jTextField2.setText(String.valueOf(jTable1.getValueAt(row, 0)));
            jTextField4.setText(String.valueOf(jTable1.getValueAt(row, 1)));
            jTextField3.setText(String.valueOf(jTable1.getValueAt(row, 2)));
            jTextField4.setEnabled(false);
            jComboBox3.setSelectedItem(String.valueOf(jTable1.getValueAt(row, 3)));
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:


    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jComboBox2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox2ItemStateChanged
        // TODO add your handling code here:
        loadSupplier();

    }//GEN-LAST:event_jComboBox2ItemStateChanged

    private void jComboBox2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBox2MouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_jComboBox2MouseClicked

    private void jTextField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyReleased
        // TODO add your handling code here:
        loadSupplier();
    }//GEN-LAST:event_jTextField1KeyReleased

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        reset();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jScrollPane1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jScrollPane1MouseReleased
        // TODO add your handling code here:

    }//GEN-LAST:event_jScrollPane1MouseReleased

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        reset();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jTable1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseReleased
        // TODO add your handling code here:
        if (evt.getButton() == MouseEvent.BUTTON3) {
            jPopupMenu1.updateUI();
            jPopupMenu1.show(evt.getComponent(), evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_jTable1MouseReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    // End of variables declaration//GEN-END:variables

    private void OpenAllSupplierDuePayment() {
        if (checkDuePaymentAvailability("")) {
            AllSupplierDuePayment asdp = new AllSupplierDuePayment(new JFrame(), true);
            asdp.setVisible(true);
        }

    }

    private void setStyle() {
        jTextField1.putClientProperty("JTextField.placeholderText", "Enter supplier mobile or name ro search...");
        jTextField2.putClientProperty("JTextField.placeholderText", "Enter supplier name");
        jTextField3.putClientProperty("JTextField.placeholderText", "Enter supplier Email");
        jTextField4.putClientProperty("JTextField.placeholderText", "Enter supplier mobil ");

        DefaultTableCellRenderer renderCenter = new DefaultTableCellRenderer();
        renderCenter.setHorizontalAlignment(SwingConstants.CENTER);
        jTable1.setDefaultRenderer(String.class, renderCenter);
    }

    private void reset() {
        jTable1.setEnabled(true);
        jButton1.setEnabled(true);
        jButton2.setEnabled(false);
        jTextField1.setText("");
        jTextField2.setText("");
        jTextField3.setText("");
        jTextField4.setText("");
        jTextField4.setEnabled(true);
        jComboBox2.setSelectedIndex(0);
        jComboBox3.setSelectedIndex(0);
        jTable1.clearSelection();
        loadSupplier();
    }

    private void checkDuePayments() {
        int row = jTable1.getSelectedRow();
        if (row == -1) {
            OpenAllSupplierDuePayment();
        } else{
            openSingleSupplierDuePayments();
        }
    }

    private void openSingleSupplierDuePayments() {
        String name = String.valueOf(jTable1.getValueAt(jTable1.getSelectedRow(), 0));
        String mobile = String.valueOf(jTable1.getValueAt(jTable1.getSelectedRow(), 1));

        if (checkDuePaymentAvailability(mobile)) {            
            SingleSupplierDuePayment openSingleSupplierDuePayment = new SingleSupplierDuePayment(new JFrame(), true);
            openSingleSupplierDuePayment.setSupplier(name, mobile);
            openSingleSupplierDuePayment.setVisible(true);
        }
    }

    private boolean checkDuePaymentAvailability(String supplier) {
        ResultSet kitchenGrnList = Mysql.execute("SELECT * FROM `kitchen_grn` "
                + "WHERE (`kitchen_grn`.`total` - `kitchen_grn`.`paid_amount`) > 0 "
                + "AND `supplier_mobile` LIKE '%" + supplier + "%'");
        ResultSet directGrnList = Mysql.execute("SELECT * FROM direct_selling_grn "
                + "WHERE (`direct_selling_grn`.`total` - `direct_selling_grn`.`paid_amount`) > 0 "
                + "AND `supplier_mobile` LIKE '%" + supplier + "%'");

        try {
            if (kitchenGrnList.next()) {
                return true;
            } else if (directGrnList.next()) {
                return true;
            }
        } catch (SQLException ex) {
            Splash.logger.log(Level.SEVERE, null, ex);
            ex.printStackTrace();
        }
        dashboard.setWarningStatus("No due payments found");
        return false;
    }

    private void updateSupplier() {
        String name = jTextField2.getText();
        String mobile = jTextField4.getText();
        String email = jTextField3.getText();
        // int category = Integer.valueOf(jComboBox3.getSelectedItem());
        String category = String.valueOf(jComboBox3.getSelectedItem());

        if (name.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please Enter Your Name", "Warning", JOptionPane.WARNING_MESSAGE);

        } else if (email.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please Enter Your Email", "Warning", JOptionPane.WARNING_MESSAGE);

        } else if (!email.matches("^(?=.{1,64}@)[A-Za-z0-9\\+_-]+(\\.[A-Za-z0-9\\+_-]+)*@"
                + "[^-][A-Za-z0-9\\+-]+(\\.[A-Za-z0-9\\+-]+)*(\\.[A-Za-z]{2,})$")) {

            JOptionPane.showMessageDialog(this, "Invalid Email", "Warning", JOptionPane.WARNING_MESSAGE);

        } else if ("Select Category".equals(category)) {
            JOptionPane.showMessageDialog(this, "Please Select Category", "Warning", JOptionPane.WARNING_MESSAGE);

        } else {

            try {
                ResultSet resultSet = Mysql.execute("SELECT * FROM `supplier` WHERE `mobile` = '" + mobile + "'");
                boolean canupdate = false;
                if (resultSet.next()) {
                    if (resultSet.getString("mobile").equals(mobile)) {
                        canupdate = true;
                    } else {
                        JOptionPane.showMessageDialog(this, "Mobile Already Used", "Warning", JOptionPane.WARNING_MESSAGE);
                    }

                } else {
                    canupdate = true;
                }
                if (canupdate) {
                    Mysql.execute("UPDATE `supplier` SET `name` = '" + name + "', `email`= '" + email + "',"
                            + " `supplier_category_id` = '" + supplierCategoryMap.get(category) + "' WHERE `mobile` = '" + mobile + "'");

                    this.dashboard.setSuccessStatus("Supplier Updated successfully");
                    dashboard.getUser().updateUserActivity(User.UserActivity.SUPPLIER_UPDATED);
                    reset();
                }

            } catch (Exception e) {
                e.printStackTrace();
                Splash.logger.log(Level.SEVERE, null, e);
            }

        }

    }

    private void addSupplier() {
        String name = jTextField2.getText();
        String mobile = jTextField4.getText();
        String email = jTextField3.getText();
        String category = String.valueOf(jComboBox3.getSelectedItem());

        if (name.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please Enter Your Name", "Warning", JOptionPane.WARNING_MESSAGE);

        } else if (mobile.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please Enter Your Mobile", "Warning", JOptionPane.WARNING_MESSAGE);

        } else if (!mobile.matches("^07[01245678]{1}[0-9]{7}$")) {
            JOptionPane.showMessageDialog(this, "Invalid Mobile Number", "Warning", JOptionPane.WARNING_MESSAGE);

        } else if (email.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please Enter Your Email", "Warning", JOptionPane.WARNING_MESSAGE);

        } else if (!email.matches("^(?=.{1,64}@)[A-Za-z0-9\\+_-]+(\\.[A-Za-z0-9\\+_-]+)*@"
                + "[^-][A-Za-z0-9\\+-]+(\\.[A-Za-z0-9\\+-]+)*(\\.[A-Za-z]{2,})$")) {

            JOptionPane.showMessageDialog(this, "Invalid Email", "Warning", JOptionPane.WARNING_MESSAGE);

        } else if ("Select Category".equals(category)) {
            JOptionPane.showMessageDialog(this, "Please Select Category", "Warning", JOptionPane.WARNING_MESSAGE);

        } else {

            try {
                ResultSet resultSet = Mysql.execute("SELECT * FROM `supplier` WHERE `name` = '" + name + "' OR `mobile` = '" + mobile + "' OR `email` = '" + email + "'");

                if (resultSet.next()) {
                    JOptionPane.showMessageDialog(this, "Supplier Already Registered", "Warning", JOptionPane.WARNING_MESSAGE);

                } else {
                    Mysql.execute("INSERT INTO `supplier` (`name`,`mobile`,`email`,`supplier_category_id`) "
                            + "VALUES ('" + name + "','" + mobile + "','" + email + "','" + supplierCategoryMap.get(category) + "')");

                    loadSupplier();
                    dashboard.setSuccessStatus("Supplier added successfully");
                    dashboard.getUser().updateUserActivity(User.UserActivity.SUPPLIER_ADDED);
                    reset();
                }

            } catch (Exception e) {
                e.printStackTrace();
                Splash.logger.log(Level.SEVERE, null, e);
            }

        }
    }
}
