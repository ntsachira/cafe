/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.cafe.gui;

import com.cafe.model.Mysql;
import com.cafe.model.Theme;
import com.cafe.model.User;
import com.cafe.model.UserRole;
import com.cafe.style.CustomStyle;
import com.formdev.flatlaf.FlatLightLaf;
import java.awt.image.BufferedImage;
import java.io.BufferedReader;
import java.io.File;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.URL;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.StandardCopyOption;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author User
 */
public class Settings extends javax.swing.JPanel {

    private Dashboard dashboard;
    private File selectedFile;

    /**
     * Instance References for Business details
     */
    private String companyName;
    private String tele;
    private String address;
    private String theme;

    /**
     * Instance References for admin details
     */
    private String displayName;
    private String username;

    public Dashboard getDashboard() {
        return dashboard;
    }

    public void setDashboard(Dashboard dashboard) {
        this.dashboard = dashboard;
    }

    /**
     * Creates new form Settings
     */
    public Settings() {
        initComponents();
        setStyle();
        loadBusinessDetails();
        loadAdminDetails();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanel3 = new javax.swing.JPanel();
        jPanel60 = new javax.swing.JPanel();
        jPanel61 = new javax.swing.JPanel();
        jPanel64 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jPanel66 = new javax.swing.JPanel();
        jPanel71 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jPanel73 = new javax.swing.JPanel();
        jPanel78 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jPanel65 = new javax.swing.JPanel();
        jPanel80 = new javax.swing.JPanel();
        jPanel20 = new javax.swing.JPanel();
        jPanel21 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jPanel72 = new javax.swing.JPanel();
        jPanel79 = new javax.swing.JPanel();
        jImagePanel1 = new main.JImagePanel();
        jPanel4 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jPanel18 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jPanel23 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jPanel14 = new javax.swing.JPanel();
        jPanel19 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel36 = new javax.swing.JPanel();
        jPanel37 = new javax.swing.JPanel();
        jPanel40 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jPanel42 = new javax.swing.JPanel();
        jPanel47 = new javax.swing.JPanel();
        darkOption = new javax.swing.JRadioButton();
        lightOption = new javax.swing.JRadioButton();
        jPanel41 = new javax.swing.JPanel();
        jPanel22 = new javax.swing.JPanel();
        jButton4 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        radioOnlyDatabase = new javax.swing.JRadioButton();
        radioRemoveExsisting = new javax.swing.JRadioButton();
        jButton10 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();

        setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 20, 10, 20));
        setLayout(new java.awt.GridLayout(1, 3, 20, 0));

        jPanel3.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createTitledBorder(null, "BUSSINESS DETAILS", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Semibold", 0, 14)), javax.swing.BorderFactory.createEmptyBorder(15, 15, 15, 15))); // NOI18N
        jPanel3.setLayout(new java.awt.BorderLayout(0, 40));

        jPanel60.setLayout(new java.awt.BorderLayout(15, 30));

        jPanel61.setPreferredSize(new java.awt.Dimension(100, 270));
        jPanel61.setLayout(new java.awt.GridLayout(3, 0, 0, 15));

        jPanel64.setLayout(new java.awt.BorderLayout());

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("Resturant Name");
        jLabel4.setPreferredSize(new java.awt.Dimension(37, 40));
        jPanel64.add(jLabel4, java.awt.BorderLayout.CENTER);

        jTextField3.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jTextField3.setPreferredSize(new java.awt.Dimension(37, 40));
        jPanel64.add(jTextField3, java.awt.BorderLayout.SOUTH);

        jPanel61.add(jPanel64);

        jPanel66.setPreferredSize(new java.awt.Dimension(100, 80));
        jPanel66.setLayout(new java.awt.BorderLayout());

        jPanel71.setLayout(new java.awt.BorderLayout());

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setText("Telephone");
        jLabel5.setPreferredSize(new java.awt.Dimension(37, 40));
        jPanel71.add(jLabel5, java.awt.BorderLayout.CENTER);

        jTextField4.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jTextField4.setPreferredSize(new java.awt.Dimension(37, 40));
        jTextField4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField4KeyTyped(evt);
            }
        });
        jPanel71.add(jTextField4, java.awt.BorderLayout.SOUTH);

        jPanel66.add(jPanel71, java.awt.BorderLayout.CENTER);

        jPanel61.add(jPanel66);

        jPanel73.setPreferredSize(new java.awt.Dimension(100, 80));
        jPanel73.setLayout(new java.awt.BorderLayout());

        jPanel78.setLayout(new java.awt.BorderLayout());

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel6.setText("Address");
        jLabel6.setPreferredSize(new java.awt.Dimension(37, 40));
        jPanel78.add(jLabel6, java.awt.BorderLayout.CENTER);

        jTextField5.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jTextField5.setPreferredSize(new java.awt.Dimension(37, 40));
        jPanel78.add(jTextField5, java.awt.BorderLayout.SOUTH);

        jPanel73.add(jPanel78, java.awt.BorderLayout.CENTER);

        jPanel61.add(jPanel73);

        jPanel60.add(jPanel61, java.awt.BorderLayout.NORTH);

        jPanel65.setLayout(new java.awt.BorderLayout());

        jPanel80.setPreferredSize(new java.awt.Dimension(580, 134));
        jPanel80.setLayout(new java.awt.BorderLayout());

        jPanel20.setPreferredSize(new java.awt.Dimension(70, 40));
        jPanel20.setLayout(new java.awt.BorderLayout());

        jPanel21.setPreferredSize(new java.awt.Dimension(70, 40));
        jPanel21.setLayout(new java.awt.BorderLayout(10, 0));

        jButton3.setBackground(new java.awt.Color(77, 120, 204));
        jButton3.setFont(new java.awt.Font("Segoe UI Semibold", 0, 16)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("SAVE BUSINESS DETAILS");
        jButton3.setBorderPainted(false);
        jButton3.setPreferredSize(new java.awt.Dimension(72, 40));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel21.add(jButton3, java.awt.BorderLayout.CENTER);

        jButton7.setBackground(new java.awt.Color(102, 102, 102));
        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/cafe/img/refresh.png"))); // NOI18N
        jButton7.setBorderPainted(false);
        jButton7.setPreferredSize(new java.awt.Dimension(40, 40));
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jPanel21.add(jButton7, java.awt.BorderLayout.EAST);

        jPanel20.add(jPanel21, java.awt.BorderLayout.NORTH);

        jPanel80.add(jPanel20, java.awt.BorderLayout.CENTER);

        jPanel65.add(jPanel80, java.awt.BorderLayout.CENTER);

        jPanel60.add(jPanel65, java.awt.BorderLayout.CENTER);

        jPanel3.add(jPanel60, java.awt.BorderLayout.CENTER);

        jPanel72.setToolTipText("Allowed formats - jpg, jpeg, png, gif");
        jPanel72.setPreferredSize(new java.awt.Dimension(37, 300));
        jPanel72.setLayout(new java.awt.BorderLayout(0, 15));

        jPanel79.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Report logo", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 14))); // NOI18N
        jPanel79.setPreferredSize(new java.awt.Dimension(590, 40));

        jImagePanel1.setFitToPanel(true);
        jImagePanel1.setImageIcon(new javax.swing.ImageIcon(getClass().getResource("/com/cafe/reports/logo.png"))); // NOI18N
        jImagePanel1.setPreferredSize(new java.awt.Dimension(200, 200));
        jPanel79.add(jImagePanel1);

        jPanel72.add(jPanel79, java.awt.BorderLayout.CENTER);

        jPanel4.setPreferredSize(new java.awt.Dimension(100, 40));
        jPanel4.setLayout(new java.awt.BorderLayout(10, 0));

        jButton2.setBackground(new java.awt.Color(102, 102, 102));
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/cafe/img/refresh.png"))); // NOI18N
        jButton2.setBorderPainted(false);
        jButton2.setPreferredSize(new java.awt.Dimension(40, 40));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton2, java.awt.BorderLayout.LINE_END);

        jButton5.setBackground(new java.awt.Color(77, 120, 204));
        jButton5.setFont(new java.awt.Font("Segoe UI Semibold", 0, 16)); // NOI18N
        jButton5.setForeground(new java.awt.Color(255, 255, 255));
        jButton5.setText("CHANGE IMAGE");
        jButton5.setBorderPainted(false);
        jButton5.setPreferredSize(new java.awt.Dimension(300, 40));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton5, java.awt.BorderLayout.WEST);

        jButton6.setBackground(new java.awt.Color(102, 102, 102));
        jButton6.setFont(new java.awt.Font("Segoe UI Semibold", 0, 16)); // NOI18N
        jButton6.setForeground(new java.awt.Color(255, 255, 255));
        jButton6.setText("UPLOAD");
        jButton6.setEnabled(false);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton6, java.awt.BorderLayout.CENTER);

        jPanel72.add(jPanel4, java.awt.BorderLayout.SOUTH);

        jPanel3.add(jPanel72, java.awt.BorderLayout.NORTH);

        add(jPanel3);

        jPanel2.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createTitledBorder(null, "ADMIN DETAILS", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Semibold", 0, 14)), javax.swing.BorderFactory.createEmptyBorder(15, 15, 15, 15))); // NOI18N
        jPanel2.setPreferredSize(new java.awt.Dimension(100, 100));
        jPanel2.setLayout(new java.awt.BorderLayout());

        jPanel9.setPreferredSize(new java.awt.Dimension(100, 50));
        jPanel9.setLayout(new java.awt.BorderLayout(10, 30));

        jPanel10.setPreferredSize(new java.awt.Dimension(100, 270));
        jPanel10.setLayout(new java.awt.GridLayout(3, 0, 0, 20));

        jPanel13.setLayout(new java.awt.BorderLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setText("Mobile");
        jLabel1.setPreferredSize(new java.awt.Dimension(37, 25));
        jPanel13.add(jLabel1, java.awt.BorderLayout.CENTER);

        jTextField1.setEditable(false);
        jTextField1.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jTextField1.setFocusable(false);
        jTextField1.setPreferredSize(new java.awt.Dimension(37, 40));
        jPanel13.add(jTextField1, java.awt.BorderLayout.SOUTH);

        jPanel10.add(jPanel13);

        jPanel18.setLayout(new java.awt.BorderLayout());

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Display Name");
        jLabel2.setPreferredSize(new java.awt.Dimension(37, 25));
        jPanel18.add(jLabel2, java.awt.BorderLayout.CENTER);

        jTextField2.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jTextField2.setPreferredSize(new java.awt.Dimension(37, 40));
        jPanel18.add(jTextField2, java.awt.BorderLayout.SOUTH);

        jPanel10.add(jPanel18);

        jPanel23.setLayout(new java.awt.BorderLayout());

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel7.setText("Username");
        jLabel7.setPreferredSize(new java.awt.Dimension(37, 25));
        jPanel23.add(jLabel7, java.awt.BorderLayout.CENTER);

        jTextField6.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jTextField6.setPreferredSize(new java.awt.Dimension(37, 40));
        jPanel23.add(jTextField6, java.awt.BorderLayout.SOUTH);

        jPanel10.add(jPanel23);

        jPanel9.add(jPanel10, java.awt.BorderLayout.PAGE_START);

        jPanel14.setPreferredSize(new java.awt.Dimension(100, 50));
        jPanel14.setLayout(new java.awt.BorderLayout());

        jPanel19.setLayout(new java.awt.BorderLayout());

        jPanel8.setLayout(new java.awt.BorderLayout(10, 0));

        jButton1.setBackground(new java.awt.Color(77, 120, 204));
        jButton1.setFont(new java.awt.Font("Segoe UI Semibold", 0, 16)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("SAVE ADMIN DETAILS");
        jButton1.setBorderPainted(false);
        jButton1.setPreferredSize(new java.awt.Dimension(75, 40));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel8.add(jButton1, java.awt.BorderLayout.CENTER);

        jButton8.setBackground(new java.awt.Color(102, 102, 102));
        jButton8.setFont(new java.awt.Font("Segoe UI Semibold", 0, 16)); // NOI18N
        jButton8.setForeground(new java.awt.Color(255, 255, 255));
        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/cafe/img/refresh.png"))); // NOI18N
        jButton8.setBorderPainted(false);
        jButton8.setPreferredSize(new java.awt.Dimension(40, 40));
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        jPanel8.add(jButton8, java.awt.BorderLayout.EAST);

        jPanel19.add(jPanel8, java.awt.BorderLayout.CENTER);

        jPanel14.add(jPanel19, java.awt.BorderLayout.NORTH);

        jPanel9.add(jPanel14, java.awt.BorderLayout.CENTER);

        jPanel2.add(jPanel9, java.awt.BorderLayout.CENTER);

        add(jPanel2);

        jPanel1.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createTitledBorder(null, "SYSTEM SETTINGS", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Semibold", 0, 14)), javax.swing.BorderFactory.createEmptyBorder(15, 15, 15, 15))); // NOI18N
        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel36.setLayout(new java.awt.BorderLayout(10, 30));

        jPanel37.setPreferredSize(new java.awt.Dimension(100, 80));
        jPanel37.setLayout(new java.awt.BorderLayout());

        jPanel40.setLayout(new java.awt.BorderLayout());

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Select Default Theme");
        jLabel3.setPreferredSize(new java.awt.Dimension(37, 40));
        jPanel40.add(jLabel3, java.awt.BorderLayout.CENTER);

        jPanel37.add(jPanel40, java.awt.BorderLayout.NORTH);

        jPanel42.setPreferredSize(new java.awt.Dimension(100, 80));
        jPanel42.setLayout(new java.awt.BorderLayout());

        jPanel47.setLayout(new java.awt.GridLayout(1, 0));

        buttonGroup1.add(darkOption);
        darkOption.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        darkOption.setText("Dark Mode");
        darkOption.setIconTextGap(10);
        darkOption.setPreferredSize(new java.awt.Dimension(98, 40));
        darkOption.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                darkOptionItemStateChanged(evt);
            }
        });
        jPanel47.add(darkOption);

        buttonGroup1.add(lightOption);
        lightOption.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        lightOption.setText("Light Mode");
        lightOption.setIconTextGap(10);
        lightOption.setPreferredSize(new java.awt.Dimension(98, 40));
        lightOption.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                lightOptionItemStateChanged(evt);
            }
        });
        jPanel47.add(lightOption);

        jPanel42.add(jPanel47, java.awt.BorderLayout.CENTER);

        jPanel37.add(jPanel42, java.awt.BorderLayout.CENTER);

        jPanel36.add(jPanel37, java.awt.BorderLayout.PAGE_START);

        jPanel41.setLayout(new java.awt.BorderLayout());

        jPanel22.setLayout(new java.awt.BorderLayout(10, 0));

        jButton4.setBackground(new java.awt.Color(77, 120, 204));
        jButton4.setFont(new java.awt.Font("Segoe UI Semibold", 0, 16)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("SAVE SYSTEM SETTINGS");
        jButton4.setBorderPainted(false);
        jButton4.setPreferredSize(new java.awt.Dimension(75, 40));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel22.add(jButton4, java.awt.BorderLayout.CENTER);

        jButton9.setBackground(new java.awt.Color(102, 102, 102));
        jButton9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/cafe/img/refresh.png"))); // NOI18N
        jButton9.setPreferredSize(new java.awt.Dimension(40, 40));
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        jPanel22.add(jButton9, java.awt.BorderLayout.EAST);

        jPanel41.add(jPanel22, java.awt.BorderLayout.NORTH);

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel8.setText("System Backup");

        buttonGroup2.add(radioOnlyDatabase);
        radioOnlyDatabase.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        radioOnlyDatabase.setSelected(true);
        radioOnlyDatabase.setText("Only Backup Database");

        buttonGroup2.add(radioRemoveExsisting);
        radioRemoveExsisting.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        radioRemoveExsisting.setText("Backup and Remove existing database");

        jButton10.setBackground(new java.awt.Color(77, 120, 204));
        jButton10.setFont(new java.awt.Font("Segoe UI Semibold", 0, 16)); // NOI18N
        jButton10.setForeground(new java.awt.Color(255, 255, 255));
        jButton10.setText("PROCEED BACKUP");
        jButton10.setBorderPainted(false);
        jButton10.setPreferredSize(new java.awt.Dimension(163, 40));
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator1)
                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(radioRemoveExsisting)
                            .addComponent(radioOnlyDatabase))
                        .addGap(0, 82, Short.MAX_VALUE))
                    .addComponent(jButton10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(jLabel8)
                .addGap(18, 18, 18)
                .addComponent(radioOnlyDatabase)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(radioRemoveExsisting)
                .addGap(24, 24, 24)
                .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(334, Short.MAX_VALUE))
        );

        jPanel41.add(jPanel5, java.awt.BorderLayout.CENTER);

        jPanel36.add(jPanel41, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel36, java.awt.BorderLayout.CENTER);

        add(jPanel1);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        saveAdminDetails();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        selectImage();


    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        resetImage();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        uploadImage();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        loadBusinessDetails();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        saveBusinessDetails();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTextField4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField4KeyTyped
        // TODO add your handling code here:
        if (!String.valueOf(evt.getKeyChar()).matches("[0-9]")) {
            evt.consume();
            if (String.valueOf(evt.getKeyChar()).matches("[a-zA-Z]")) {
                dashboard.setWarningStatus("Only number values are allowed");
            }
        }
    }//GEN-LAST:event_jTextField4KeyTyped

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        loadAdminDetails();
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        saveTheme();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        setDefaultTheme();
    }//GEN-LAST:event_jButton9ActionPerformed

    private void darkOptionItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_darkOptionItemStateChanged
        // TODO add your handling code here:
        if (darkOption.isSelected() && dashboard != null) {
            dashboard.setMode(Theme.Mode.DARK);
        }
    }//GEN-LAST:event_darkOptionItemStateChanged

    private void lightOptionItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_lightOptionItemStateChanged
        // TODO add your handling code here:
        if (lightOption.isSelected() && dashboard != null) {
            dashboard.setMode(Theme.Mode.LIGHT);
        }
    }//GEN-LAST:event_lightOptionItemStateChanged

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        proceedBackup();
    }//GEN-LAST:event_jButton10ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JRadioButton darkOption;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private main.JImagePanel jImagePanel1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel36;
    private javax.swing.JPanel jPanel37;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel40;
    private javax.swing.JPanel jPanel41;
    private javax.swing.JPanel jPanel42;
    private javax.swing.JPanel jPanel47;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel60;
    private javax.swing.JPanel jPanel61;
    private javax.swing.JPanel jPanel64;
    private javax.swing.JPanel jPanel65;
    private javax.swing.JPanel jPanel66;
    private javax.swing.JPanel jPanel71;
    private javax.swing.JPanel jPanel72;
    private javax.swing.JPanel jPanel73;
    private javax.swing.JPanel jPanel78;
    private javax.swing.JPanel jPanel79;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel80;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JRadioButton lightOption;
    private javax.swing.JRadioButton radioOnlyDatabase;
    private javax.swing.JRadioButton radioRemoveExsisting;
    // End of variables declaration//GEN-END:variables

    private void selectImage() {
        JFileChooser fileChooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("*.image", "jpg", "png", "jpeg", "gif");
        fileChooser.setFileFilter(filter);
        int response = fileChooser.showOpenDialog(this.dashboard);

        if (response == JFileChooser.APPROVE_OPTION) {
            selectedFile = fileChooser.getSelectedFile();
            if (!filter.accept(selectedFile)) {
                resetImage();
                this.dashboard.setWarningStatus("Invalid file type");
                jButton6.setEnabled(false);
                JOptionPane.showMessageDialog(this, "Please select only Following file types:\n"
                        + "JPG, JPEG, PNG, GIF", "Warning", JOptionPane.WARNING_MESSAGE);
                selectedFile = null;
            }
        } else {
            this.dashboard.setWarningStatus("No image selected");
        }

        loadImage();
    }

    private void resetImage() {
        try {
            File resource = new File(System.getProperty("user.dir") + File.separator + "reports/logo.png");
          
            BufferedImage logo = ImageIO.read(resource);
            if (logo == null) {
                Splash.logger.log(Level.SEVERE,"Failed to load the new image from: " + resource);
            }
            selectedFile = null;
            jImagePanel1.setImageIcon(new ImageIcon(logo));
            jImagePanel1.updateUI();
            jButton6.setEnabled(false);
        } catch (IOException ex) {
            Splash.logger.log(Level.SEVERE,ex.getMessage());            
        }

    }

    private void loadImage() {
        if (selectedFile != null) {
            jImagePanel1.setImageIcon(new ImageIcon(selectedFile.getPath()));
            jImagePanel1.updateUI();
            jButton6.setEnabled(true);
        } else {
            jButton6.setEnabled(false);
        }
    }

    private void uploadImage() {
        if (selectedFile != null) {
            if (selectedFile.exists()) {
                File destinationFolder = new File(System.getProperty("user.dir") + File.separator + "reports");
               
                if (destinationFolder.exists()) {                    
                    Path destinationPath = destinationFolder.toPath().resolve("logo.png");
                    System.out.println(destinationPath);
                    try {
                        // Copy the new image file to the destination
                        Files.copy(selectedFile.toPath(), destinationPath, StandardCopyOption.REPLACE_EXISTING);
                        dashboard.setSuccessStatus("Image uploaded successfully");
                        dashboard.getUser().updateUserActivity(User.UserActivity.BUSINESS_LOGO_UPDATED);
                        resetImage();
                    } catch (IOException ex) {
                        Splash.logger.log(Level.SEVERE, "Error uploading image: " + ex.getMessage());
                        JOptionPane.showMessageDialog(this, "Error uploading image. Please try again.");
                    }
                } else {
                    Splash.logger.log(Level.SEVERE, "Destination resource path not found.");
                    JOptionPane.showMessageDialog(this, "Error: Destination folder does not exist.");
                }
            } else {
                JOptionPane.showMessageDialog(this, "File does not exist.");
            }
        } else {
            dashboard.setWarningStatus("No image selected.");
        }

    }

    private void loadBusinessDetails() {
        resetImage();
        try {
            ResultSet resultSet = Mysql.execute("SELECT * FROM `system`");
            if (resultSet.next()) {
                companyName = resultSet.getString("name");
                tele = resultSet.getString("tele");
                address = resultSet.getString("address");
                theme = resultSet.getString("theme");

                jTextField3.setText(companyName);
                jTextField4.setText(tele);
                jTextField5.setText(address);

                setDefaultTheme();
            }
        } catch (SQLException ex) {
            Splash.logger.log(Level.SEVERE,ex.getMessage());            
        }
    }

    private void loadAdminDetails() {
        try {
            ResultSet resultSet = Mysql.execute("SELECT * FROM `user` WHERE user_role_id = "
                    + "(SELECT id FROM user_role WHERE user_role.role_name = 'Admin' ) ");
            if (resultSet.next()) {
                displayName = resultSet.getString("display_name");
                username = resultSet.getString("username");

                jTextField1.setText(resultSet.getString("mobile"));
                jTextField2.setText(displayName);
                jTextField6.setText(username);
            }
        } catch (SQLException ex) {
            Splash.logger.log(Level.SEVERE,ex.getMessage());            
        }
    }

    private void saveTheme() {
        if (darkOption.isSelected()) {
            if (this.theme.equals("DARK")) {
                dashboard.setSuccessStatus("Default theme is already set to DARK");
            } else {
                //update theme
                Mysql.execute("UPDATE `system` SET `theme`='DARK'");
                dashboard.setSuccessStatus("Default theme updated as DARK");
                dashboard.getUser().updateUserActivity(User.UserActivity.SYSTEM_SETTINGS_UPDATED);
                this.theme = "DARK";
            }
        } else if (lightOption.isSelected()) {
            if (this.theme.equals("LIGHT")) {
                dashboard.setSuccessStatus("Default theme is already set to LIGHT");
            } else {
                //update theme
                Mysql.execute("UPDATE `system` SET `theme`='LIGHT'");
                dashboard.setSuccessStatus("Default theme updated as LIGHT");
                dashboard.getUser().updateUserActivity(User.UserActivity.SYSTEM_SETTINGS_UPDATED);
                this.theme = "LIGHT";
            }
        }
    }

    private void setStyle() {
        CustomStyle.showClearButton(
                jTextField1, jTextField2, jTextField3, jTextField4, jTextField5,
                jTextField6
        );
    }

    private void saveBusinessDetails() {
        String name = jTextField3.getText();
        String tele = jTextField4.getText();
        String address = jTextField5.getText();
        if (name.isBlank()) {
            dashboard.setWarningStatus("Restaurant Name cannot be empty");
            jTextField3.grabFocus();
        } else if (tele.isBlank()) {
            dashboard.setWarningStatus("Telephone number cannot be empty");
            jTextField4.grabFocus();
        } else if (!tele.matches("0[47][12456780][0-9]{7}")) {
            dashboard.setWarningStatus("Telephone number is not valid");
            jTextField4.grabFocus();
        } else if (address.isBlank()) {
            dashboard.setWarningStatus("Address cannot be empty");
            jTextField5.grabFocus();
        } else if (this.companyName.equals(name) && this.tele.equals(tele) && this.address.equals(address)) {
            dashboard.setSuccessStatus("Business Details are already saved");
        } else {
            Mysql.execute("UPDATE `system` SET `name`='" + name + "', `tele`='" + tele + "',`address`='" + address + "'");
            dashboard.setSuccessStatus("Business Deatails saved successfully");
            dashboard.getUser().updateUserActivity(User.UserActivity.BUSINESS_DETAILS_UPDATED);
            dashboard.setBusinessName();

            this.companyName = name;
            this.tele = tele;
            this.address = address;
        }
    }

    private void saveAdminDetails() {

        String displayName = jTextField2.getText();
        String username = jTextField6.getText();

        if (displayName.isBlank()) {
            dashboard.setWarningStatus("Display name cannot be empty");
            jTextField2.grabFocus();
        } else if (username.isBlank()) {
            dashboard.setWarningStatus("Username cannot be empty");
            jTextField6.grabFocus();
        } else if (this.displayName.equals(displayName) && this.username.equals(username)) {
            dashboard.setSuccessStatus("Admin Details are already saved");
        } else {
            Mysql.execute("UPDATE `user` SET `display_name`='" + displayName + "', `username`='" + username + "' "
                    + "WHERE `mobile`='" + jTextField1.getText() + "'");

            dashboard.setSuccessStatus("Admin details saved successfully");
            dashboard.getUser().updateUserActivity(User.UserActivity.ADMIN_DETAILS_UPDATED);
            this.displayName = displayName;
            this.username = username;

            User user = new User();
            user.setDisplay_name(displayName);
            user.setUsername(username);
            user.setMobile(dashboard.getUser().getMobile());
            user.setRole(UserRole.Role.Admin);

            dashboard.setUser(user);
            dashboard.setDiplayName();
        }
    }

    private void setDefaultTheme() {
        if (theme.equals("DARK")) {
            darkOption.setSelected(true);
        } else {
            lightOption.setSelected(true);
        }
    }

    private void proceedBackup() {

        if (radioRemoveExsisting.isSelected()) {
            if (JOptionPane.showConfirmDialog(
                    this,
                    "This action will restart your application. Do you want to proceed",
                    "Warning!",
                    JOptionPane.YES_NO_OPTION,
                    JOptionPane.WARNING_MESSAGE) == JOptionPane.YES_OPTION) {
                backupDatabase();
            }

        } else {
            backupDatabase();
        }
    }
    String path;

    private void backupDatabase() {
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileFilter(new FileNameExtensionFilter("SQL files (*.sql)", "sql"));
        fileChooser.showSaveDialog(this);
        File selectesFile = fileChooser.getSelectedFile();
        if (selectesFile != null) {
            path = selectesFile.getPath();
            if (!path.endsWith(".sql")) {

                if (path.lastIndexOf(".") != -1) {
                    path = path.substring(0, path.lastIndexOf("."));
                }
                path += ".sql";
            }

            String command = String.format(
                    "\"\"C:\\Program Files\\MySQL\\MySQL Server 8.0\\bin\\mysqldump.exe\" -u%s -p%s cafe_db > \"%s\"",
                    Mysql.getUsername(),
                    Mysql.getPASSWORD(),
                    path
            );

            String[] commandBundle = new String[]{
                "cmd.exe",
                "/c",
                command
            };

            try {
                final String locationPath = path.substring(0, path.lastIndexOf(File.separator));
                jButton10.setText("Backup in progress...");
                jButton10.setEnabled(false);
                Process process = Runtime.getRuntime().exec(commandBundle);

                new Thread(() -> {
                    try {
                        int processStatus = process.waitFor();
                        jButton10.setText("PROCEED BACKUP");
                        jButton10.setEnabled(true);
                        if (processStatus == 0) {
                            dashboard.getUser().updateUserActivity(User.UserActivity.DATABASE_BACKUP);
                            if (radioRemoveExsisting.isSelected()) {
                                dropExistingDatabase();
                            } else {
                                
                                if (JOptionPane.showConfirmDialog(
                                        this,
                                        "Database backup successfull. Do you want to goto the saved location",
                                        "Success",
                                        JOptionPane.YES_NO_CANCEL_OPTION,
                                        JOptionPane.INFORMATION_MESSAGE
                                ) == JOptionPane.YES_OPTION) {

                                    Runtime.getRuntime().exec(
                                            new String[]{
                                                "cmd.exe",
                                                "/c",
                                                String.format("start explorer \"%s\"", locationPath)
                                            }
                                   );
                                }
                            }

                        } else {
                            BufferedReader errorReader = new BufferedReader(new InputStreamReader(process.getErrorStream()));
                            String error;
                            while ((error = errorReader.readLine()) != null) {
                                Splash.logger.log(Level.SEVERE, error);
                            }
                            JOptionPane.showMessageDialog(
                                    this,
                                    "Database backup Faild. Please contact support",
                                    "Backup Faild",
                                    JOptionPane.ERROR_MESSAGE
                            );
                        }
                    } catch (InterruptedException ex) {
                        Splash.logger.log(Level.SEVERE, ex.getMessage());
                    } catch (IOException ex) {
                        Splash.logger.log(Level.SEVERE, ex.getMessage());
                    }
                }).start();
            } catch (IOException ex) {
                Splash.logger.log(Level.SEVERE, ex.getMessage());
            }
        }
    }

    private void dropExistingDatabase() {
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            java.sql.Connection connection;
            try {
                connection = java.sql.DriverManager.getConnection(
                        "jdbc:mysql://localhost:3306",
                        Mysql.getUsername(),
                        Mysql.getPASSWORD());
                connection.createStatement().execute("DROP DATABASE `%s`".formatted(Mysql.getDbName()));
                connection.close();
                JOptionPane.showMessageDialog(
                                    this,
                                    "Existing database removed Successfuly.",
                                    "Success",
                                    JOptionPane.INFORMATION_MESSAGE
                            );
                restartApplication();
            } catch (SQLException ex) {
                Splash.logger.log(Level.SEVERE, ex.getMessage());
            }
        } catch (ClassNotFoundException ex) {
            Splash.logger.log(Level.SEVERE, ex.getMessage());
        }
    }

    private void restartApplication() throws SQLException {
        Mysql.getConnection().close();        
        getDashboard().dispose();
        FlatLightLaf.setup();
        new Splash().setVisible(true);
    }
}
